Home | Visual Basic (VBA) Language | 3D Simulation VBA | VBA Objects | Shape Operations | LocalModification

LocalModification Object

This object is used to perform local modifications on faces of shapes and to work with face constraints for the sensitivity analysis.

Local Modifications can be very useful when parameterizing an imported structure. No information about the history of the solid creation is needed.

Methods

Default Settings

Example

Methods

Reset

Resets all internal settings to their default values.

 

Name ( name solidname )

Sets the (first) name of involved shapes.

 

AddName ( name solidname )

Adds an additional name to the list of shapes that should be involved in the operation.

 

SetBasePoint ( double posx, double posy, double posz  )

Defines the base point to which the distance is defined to for DefineConstraintSelectedFacePointDistance.

 

SetReferencePoint ( double posx, double posy, double posz  )

Defines the reference point for all picked faces from where the distance is measured to a principal plane for DefineConstraintSelectedFacePlaneDistance.

 

SetPlaneDirection ( enum direction  )

Defines the principal plane to which the distance is measured for DefineConstraintSelectedFacePlaneDistance. The value of direction has to be one of the following letters: X,U,Y,V,Z,W. It does not matter if e.g. X or U is given, if the WCS is activated, the U plane is taken, if not the X plane.

 

SetFaceID ( int id  )

This method sets the face ID for one of the delete commands. It is not used for any other operations.

 

EnableInvertedFaceRemoval( bool switch )

If enabled, faces that are inverted after performing a local operation will be removed. If false, they are inverted to be valid again and used in the changed shape.

 

SetConsiderBlends( bool switch )

If enabled, adjacent blends to the selected face are considered during local operations. Technically the blends are removed prior to the local operation and reapplied afterwards at their new position.

 

SetRepalceAttribute( bool switch )

Note: This function is actually named this way, SetReplaceAttribute does not work.

You can define multiple FacePlaneDistance constraints. If the switch is set, the first attached attribute is replaced, if existing. In default, this flag is false, and an additional attribute is attached on the face, each time a face plane distance constraint is defined.

 
%% 
 

OffsetSelectedFaces ( double amount )

This method moves the picked faces of the listed shapes in direction of their face normals. For instance if the offset method is applied to a cylindrical face of a cylinder, it simply changes its radius.

All adjoining faces to the changed faces will be changed as well such that the solid retains a closed surface.

 

MoveSelectedFaces ( double dx , double dy, double dz )

This method translates the picked faces of the listed shapes by the given vector. Note that translating a picked planar face in a direction parallel to the surface will have no effect.

 

RemoveSelectedFaces ()

Tries to remove all previously picked faces on the listed shapes. When a face has to be removed the modeler tries to enlarge the adjoining faces according to their shapes to close the structure again. If the solid can not be closed in this way, the operation will not be executed.

 

DefineConstraintSelectedFaceRadius ( double newradius  )

This method sets the radius of all picked cylindrical faces of involved shapes to the new given radius. A constraint is attached to the face and usable for the sensitivity analysis if the new radius is given as a plain parameter.

 

DefineConstraintSelectedFacePlaneDistance ( double newdistance  )

This method sets the distance of all picked faces to a chosen principal plane to the new given distance. To define the previous distance between face and plane, the reference point has to be given.

 

DefineConstraintSelectedFacePointDistance ( double newdistance  )

This method sets the distance of all picked planar faces to a given base point. For each face, the distance is calculated as the distance between the point and the projection of the point onto the plane in which the face is placed.

 

DeleteFacePlaneDistanceConstraint( int number  )

This method removes a face plane constraint from the given face (See SetFaceID). Because multiple constraints may be attached to one face, the given number specifies, which one to delete. If there is only one face plane constraint attached, number should be 0.

 

DeleteFacePointDistanceConstraint( )

This method removes the face point distance constraint from the given face. (It is not considered for sensitivity analysis anymore.)

 

DeleteFaceRadiusConstraint( )

This method removes the radius constraint from the given face. It is not considered for sensitivity analysis anymore.)

 

DeleteFacePlaneDistanceBlendConstraint( int number  )

Those methods do remove constraints from blends that have been considered while defining face constraints on an adjacent face. The syntax is the same for all deletion commands: .Name and .SetFaceID are required (see example below).

 

DeleteFacePointDistanceBlendConstraint()

Those methods do remove constraints from blends that have been considered while defining face constraints on an adjacent face. The syntax is the same for all deletion commands: .Name and .SetFaceID are required (see example below).

 

DeleteFaceRadiusBlendConstraint()

Those methods do remove constraints from blends that have been considered while defining face constraints on an adjacent face. The syntax is the same for all deletion commands: .Name and .SetFaceID are required (see example below).

 

Default Settings

SetRepalceAttribute (False)

EnableInvertedFaceRemoval(False)

Examples

With LocalModification

     .Reset

     .Name "component1:solid3"

     .AddName "component1:solid4"

     .SetReferencePoint "-10.2", "3.25", "0.5"

     .SetPlaneDirection "X"

     .EnableInvertedFaceRemoval "False"

     .DefineConstraintSelectedFacePlaneDistance "facedistance_1"

End With

 

With LocalModification

     .Reset

     .Name "component1:solid1"

     .EnableInvertedFaceRemoval "False"

     .MoveSelectedFaces "-5.5", "0", "0"

End With

 

With LocalModification

     .Reset

     .Name "component1:solid3"

     .SetFaceID "1"

     .DeleteFacePlaneDistanceConstraint "0"

End With

 