Home | Visual Basic (VBA) Language | 3D Simulation VBA | VBA Objects | Sources and Ports | Low Frequency | Coil

Coil Object

Defines a new coil or a coil segment.

Methods

Default Settings

Examples

Methods

Reset

Resets the default values.

 

Name ( name  name )

Sets the name of the new charge source.

 

ProjectProfileToPathAdvanced ( bool value )

If activated the profile curve is projected onto the path curve by aligning the profile curve with  the face normal defined by the path curve.

 

CoilType ( string type )

Specifies the type of the coil or the coil segment. Generally you can select between stranded and solid conductors with current or voltage excitation. Valid types are:

"Stranded Current" or "Solid Current"                       for a current coil

"Stranded Voltage" or "Solid Voltage"                       for a voltage coil

"Stranded Current Segment" or "Solid Current Segment"       for a coil segment

A stranded conductor creates a homogeneous current density in the coil's cross section whereas a solid conductor has a constant voltage drop for all turns.

Note: Currently not all conductor- / value-type combinations are supported. The following table shows which coil types can be defined:

                        Stranded    Solid

Current Coil            yes         no

Voltage Coil            yes         yes

Current Coil Segment    yes         no

 

ToolType ( enum type )

Coils and coil segments can be created in various ways. Usually, a profile and a path or height have to be specified. The ToolType specifies which items where used for the construction. Valid types are:

"CurveCurve"        if a profile curve (ProfileName) and a path curve (PathName) is specified.
                    The path curve must be closed for coils, whereas it must not be closed for coil segments.
                    The profile curve has to be closed in either case.

"FaceCurve"         if a face pick is used to define the profile and a curve is used to define the path.
                    The face needs to be picked beforehand via the Pick command.
                    The path curve must be closed for coils, whereas it must not be closed for coil segments.

"CurveHeight"       if the profile is defined via a curve (ProfileName) and an extrusion height (Height) is specified in addition.
                    This type can be used only for the construction of coil segments.

"FaceHeight"        if a face pick is used to define the profile and the extrusion height (Height) is specified in addition.
                    The face needs to be picked beforehand via the Pick command.
                    This type can be used only for the construction of coil segments.

"CurvePointPick"    if the profile is defined via a curve (ProfileName) and the extrusion height is specified via a point pick.
                    The point needs to be picked beforehand via the Pick command.
                    This type can be used only for the construction of coil segments.

"FacePointPick"     if a face pick is used to define the profile and the extrusion height is specified via a point pick.
                    The face as well as the point need to be picked beforehand via the Pick command.
                    This type can be used only for the construction of coil segments.

 

 

ProfileName ( name  curvename )

If the profile of the coil or the coil segment is defined via a curve (ToolType "CurveCurve", "CurveHeight" or "CurvePointPick"), the name of the curve has to be specified here. The profile curve has to be closed for a proper definition.

 

PathName ( name  curvename )

If the path along which along which the profile is swept is defined via a curve (ToolType "CurveCurve", or "FaceCurve"), the name of the curve has to be specified here. The path curve must be closed for coils, whereas it must not be closed for coil segments.

 

Height ( double  height )

If a coil segment is created without point pick or path curve, the Height needs to be specified. This value is used to extrude the profile along its plane normal.

 

Value ( double  value )

Sets the current or voltage value for the source. For frequency domain calculations it can be specified in the LF Frequency Domain Solver Settings, whether the source value is to be interpreted as peak- or RMS-value. With the default settings, the prescribed current or voltage is interpreted as RMS value, i.e. as the root-mean-square values.

The voltage is prescribed in Volt. The current is given in Ampere for one winding. The total current inside a profile is determined by: Value * Nturns.

 

Phase ( double  phase )

Sets the phase of the source value in degrees. This setting affects only the simulation for frequency domain problems.

 

Nturns ( int  nturns )

Sets  the number of windings for the coil.

 

Resistance ( double  resistance )

Specifies the Ohmic resistance for the coil.

Note: If voltage driven coils are used for magnetostatic calculations, the Resistance value must not be zero.

 

Create

Creates the coil source with the previously made settings.

 

Import

This command is used if a coil was created by a subproject import - it should not be used in a macro.

 

Delete ( name  name )

Deletes the specified coil.

 

Change

Changes the settings for a name specified coil.

 

Rename ( name  oldname, name  newname )

Renames the specified coil.

 

SetAutomeshFixpoints  ( name  name, bool flag )

This method determines if the specified coil should be considered by the automatic mesh generation or not. If the coil is unimportant for the mesh generation the setting flag =False makes sure that the coil does not have any influence on the mesh. No fix- or density points will be created for this coil.

 

SetPriority ( name  name, double priority, bool flag )

This method specifies how the specified coil should be treated by the automatic mesh generation. The priority factor (0 is neutral) can be increased to assign a higher importance value to the coil. In the case that two fixpoints are so close to each other that the ratiolimit prohibits a mesh line for each point, the mesh lines will be merged. However if one of the fixpoints has been created by a coil of higher priority the mesh lines will be placed on this fixpoint.

 

SetMeshRefinement ( name  name, bool  edge_ref, double  edgefactor, bool  vo_lref, double  volfactor )

This command sets  the refinement values for a coil specified by its name.

edge_ref    This flag determines whether to use a edge refinement or not.

edgefactor  The mesh on the edge is refined by this value.

vol_ref     This flag determines whether to use a volume refinement or not.

volfactor   The mesh inside the coil volume is refined by this value.

 

SetMeshStepwidth ( name  name, double  dx, double  dy, double  dz )

Instead of defining volume or edge refinement factors, one can also

 

SeMeshStepwidthTet ( name  name, double  stepwidth )

The prescribed step width is an absolute value. The automatic mesh generator will not exceed this step width for this structure element. If a zero value is specified (default), it  will be ignored and the mesh size will be controlled by the global setting.

 

SetMeshStepwidthSrf ( name  name, double  stepwidth )

The prescribed step width is an absolute value. The automatic mesh generator will not exceed this step width for this structure element. If a zero value is specified (default), it  will be ignored and the mesh size will be controlled by the global setting.

 

SetMeshExtendwidth ( name  name, double  xextend, double  yextend, double  zextend )

This command defines additional space around a coil, where the refinement settings should be applied.

 

SetUseForSimulation ( name  name, bool flag )

Specifies whether or not the coil should be considered by the calculation.

 

SetUseBoundingBox  ( name  name, bool flag )

Specifies whether or not the coil should be considered by the bounding box calculation.

 

DoesItemExist  ( name  name) bool

Returns whether a coil with the specified name exists.

Default Settings

Current("0")

Phase ("0")

Type ("ProfilePath")

NTurns ("0")

Example

With Coil

     .Reset

     .Name ("coil1")

     .Type ("ProfilePath")

     .ProfileName ("curve1:rectangle1")

     .PathName ("curve1:circle1")

     .Current ("1")

     .Phase ("45")

     .NTurns ("100")

     .Create

End With

 