Home | Visual Basic (VBA) Language | 3D Simulation VBA | VBA Objects | Solver | Thermal | ThermalTDSolver

ThermalTDSolver Object
This object is used to define the Thermal transient solver settings.

Methods

Default Settings

Example

Methods

int Start

Starts the Thermal transient solver. Returns 0 if the solver run was successful, an error code >0 otherwise.

 

Reset

Resets all internal settings to their default values.

 

AmbientTemperature ( double value )

Specifies the ambient temperature value.

 

StoreResultsInCache ( bool flag )

If the flag is set to True this method stores results of the thermal solver in the result cache.

 

UseDistributedComputing( bool useDC )

Enables or disables distributed computing.

 

Method ( enum solvermethod )

Specifies the method used by the Thermal transient solver for discretization and solution.

The following values are available: "Hexahedral Mesh", "Tetrahedral Mesh".

 

StartSolutionAccuracy ( double  accuracy )

Specifies the accuracy of the start solution at t=0.

 

TransientSolverAccuracy ( double  accuracy )

Specifies the accuracy of the transient solver process.

 

NonlinearSolverAccuracy ( double value )

Specifies the desired accuracy value for nonlinear iteration cycles, used e.g. for radiation effects.

 

SimulationDuration ( double  duration )

Specifies the duration of the simulation.

 

ResetExcitationList

Deletes all excitation setting for the transient solver.

 

UseMaxNumberOfThreads(bool  useMaxThreads)

By default (useMaxThreads = True), the solver is run in the parallel mode, with the number of threads equal to the minimum of the following numbers:

- Number of available parallelization licenses,

- Parallelization capability of the processor's architecture,

- MaxNumberOfThreads setting.

If useMaxThreads=False, the solver parallelization is off.

 

MaxNumberOfThreads (int nThreads)

If the solver is to use less than all available threads (cf. UseMaxNumberOfThreads), the desired number can be specified here. The default value ”96” is chosen in the way that it exceeds the possibility of the modern processors architecture.

 

MaximumNumberOfCPUDevices (int nCpus)

If (useMaxThreads = True), use this command to specify the maximal number of processors on your system to be utilized by the calculation. If this number is larger that the number of available processors, the actual number of processors is used instead.

 

PTCDefault ( enum ptctype )

Specifies how ptc domains without source definition and thermal boundary behave:

enum ptctype    meaning

"Floating"      treat all PTC domains as floating temperatures

"Ambient"       treat all PTC domains with the fixed ambient temperature

 

Excitation ( name sourcename, enum sourcetype, double timeshift, name signalname, bool active )

Adds a new transient source to the simulation process. This command allows to assign a time signal to a previously defined thermal source.

 

UseAdaptiveTimeStep ( bool adaptive )

Defines whether the time step width should be selected adaptively based on the solution change or a constant time step should be used.

 

AdaptiveTimeStepScheme ( enum scheme )

Two schemes of adaptive selection of time step width are currently available:

Automatic   Determines all necessary parameters for the time integration process automatically.

User        Allows to define the most important parameters of the adaptive time integration scheme by the user.

 

TimeStepInit ( double value )

If the "User" scheme of adaptive time step selection is chosen, this command specifies the width of initial time step of transient simulation.

 

TimeStepMin ( double  tmin )

Specifies lower bounds for the adaptive time step width. This setting is useful to prevent the time step width from becoming arbitrarily small. It will only be considered when time adaption scheme "User" is enabled.

 

TimeStepMax ( double  tmax )

Specifies upper bounds for the adaptive time step width. This setting is useful to prevent the time step width from becoming inappropriately large. It will only be considered when time adaption scheme "User" is enabled.

 

TimeStepSamples ( int nsamples )

Defines the maximal number of time steps to be performed.It will only be considered when time adaption scheme "User" is enabled.

 

ConstTimeStepParam ( enum param )

If the constant time step width has been selected, this command specifies which parameter to use for time step width selection:

NumSteps    Time step width is defined by the whole simulation duration divided by the number of constant steps specified in the command NumConstTimeSteps.

StepWidth   Time step width is specified explicitly in the command ConstTimeStepWidth.

 

NumConstTimeSteps ( int nsteps )

Defines number of constant time steps to be done during transient co-simulation. This command can only be used with ConstTimeStepParam "NumSteps".

 

ConstTimeStepWidth ( double stepwidth )

Defines the constant width of time steps to be done during transient co-simulation. This command can only be used with ConstTimeStepParam "StepWidth".

 

TetSolverOrder ( int order )

Defines the finite element solution order for the tetrahedral solver.

 

InitialSolutionImported ( name fieldname )

Use the imported temperature field fieldname as the initial temperature distribution. For PTC solids, no temperature distributions are imported, the initial temperature values are used instead.

 

InitialSolutionStationary

The stationary thermal solver is started in order to generate the initial temperature distributions. All the transient sources are taken with values for the time instant t=0.

 

InitialSolutionCustom

The ambient temperature is assigned to the whole solution domain except for PTC solids with temperature sources assigned.

 

ConsiderBioheat ( bool consider )

Specify whether bioheat properties of materials (bloodflow coefficient and basal metabolic rate) should be taken into account by the solver.

 

BloodTemperature ( double  tmax )

Specify the blood temperature in °C. This setting is ignored if bioheat materials are absent or ignored.

Default Values

Method "Tetrahedral Mesh"

StartSolutionAccuracy "1e-6"

TransientSolverAccuracy "1e-6"

NonlinearSolverAccuracy "1e-6"

TetSolverOrder "2"

LSESolverType "Auto"

StoreResultsInCache "False"

SimulationDuration "1"

AmbientTemperature "293.15", "Kelvin"

ConsiderBioheat "True"

BloodTemperature "37.0"

PTCDefault "Ambient"

TimeStepScheme "Automatic"

TimeStepInit "1e-3"

TimeStepMin "1e-6"

TimeStepMax "1e-1"

TimeStepSamples "100000"

TimeIntegratorType "Automatic"

InitialSolutionCustom

TryLoadResumeInfoFromCache "False"

TimeIntegrationOrder "High"

UseMaxNumberOfThreads "True"

MaxNumberOfThreads "96"

MaximumNumberOfCPUDevices "2"

UseDistributedComputing "False"

Examples

With ThermalTDSolver

     .Reset

     .Method "Hexahedral Mesh"

     .StartSolutionAccuracy "1e-6"

     .TransientSolverAccuracy "1e-6"

     .StoreResultsInCache "False"

     .SimulationDuration "10"

     .AmbientTemperature "20"

     .TimeStepScheme "AdaptiveUser"

     .TimeStepInit "1e-3"

     .TimeStepMin "1e-6"

     .TimeStepMax "1e-1"

     .TimeStepSamples "100000"

     .ResetExcitationList

     .Excitation "thermal loss distribution", "thermallossdistr", "0.0", "constant", "True"

     .UseDistributedComputing "False"

End With