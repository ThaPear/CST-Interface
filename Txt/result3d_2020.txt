Home | Visual Basic (VBA) Language | 3D Simulation VBA | VBA Objects | Post Processing | Result 3D

Result3D Object
This object offers access and manipulation functions to 3D results. Therefore it may contain either vector fields or scalar fields. If a scalar field is represented by this object, its values are treated to be x-components of a vector field, while all other components are not available. Therefore all functions that manipulate the x-components manipulate the components of the scalar field.

Initialization, File Operation

Global Field Operators

Local Set/Get Methods

General Settings

Example

Example for Tetrahedral Mesh

General Methods
 
InitM3T ( long numberOfTetrahedra, long nSamplesPerTetrahedron, long nComponents )
Initializes the object as zero valued tetrahedral volume result data. Set nComponents=6 for complex vector, nComponents=3 for vector and nComponents=1 for scalar data. Valid values for nSamplesPerTriangle are 1, 4 or 10.
 
Default Settings

Examples

The following VBA-Script adds a result vector with its complex conjugate, stores it to file with a separate filename and adds the result to the Navigation Tree.

 

dim res1 as object          'Create an object with the project

set res1 = Result3D("^e1")  'result file "projectName^e1.m3d"

 

dim res2 as object          'Create an empty object

set res2 = Result3D("")

 

set res2 = res1.Copy()      'Copy the data of res1 into res2

res1.Conjugate              'Calculate the complex conjugate

res1.Add res2               'Add both results

 

res1.Save "^MyResult"       'Save the result in a file named "projectName^MyResult.m3d"

 

'Store the result into the tree

res1.AddToTree "2D/3D Results\MyFolder", "MyResult"

Example for Tetrahedral Mesh

As above, but for tetrahedral mesh, the following VBA-Script adds a result vector with its complex conjugate, stores it to file with a separate filename and adds the result to the Navigation Tree.

 

dim res1 as object          'Create an object with the project

set res1 = Result3D("^e-field (#0001)_1(1).m3t")  'result file "projectName^e1.m3t"

 

dim res2 as object          'Create an empty object

set res2 = Result3D("")

 

set res2 = res1.Copy()      'Copy the data of res1 into res2

res1.Conjugate              'Calculate the complex conjugate

res1.Add res2               'Add both results

 

res1.Save "^MyResult.m3t"       'Save the result in a file named "projectName^MyResult.m3t"

 

'Store the result into the tree

res1.AddToTree "2D/3D Results\MyFolder", "MyResult.m3t"

 